library(BulkQCprerelease)
browseVignettes()
browseVignettes("BulkQCprerelease")
usethis::use_vignette("BulkQCVignette")
BulkQCprerelease::GRIP
library(BulkQCprerelease)
BulkQCprerelease::CPET
GRIP
library(BulkQCprerelease)
glipmse(GRIP)
library(BulkQCprerelease)
GRIP
library(BulkQCprerelease)
head(GRIP)
head(GRIP)
library(BulkQCprerelease)
head(GRIP)
table_names <- list("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(c(CPET, GRIP, HWWT))
table_names <- list("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(c(CPET, GRIP, HWWT),table_names)
table_names <- c("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(list(CPET, GRIP, HWWT),table_names)
library(isotree)
?isolation.forest
table_names <- c("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(list(CPET, GRIP, HWWT),table_names)
library(BulkQCprerelease)
head(GRIP)
table_names <- c("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(list(CPET, GRIP, HWWT),table_names)
table_names <- c("CPET","GRIP","HWWT")
BulkQCprerelease::individual_outliers(list(CPET, GRIP, HWWT),table_names)
library(isotree)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
table_names <- c("CPET","GRIP","HWWT")
ioutliers <- BulkQCprerelease::individual_outliers(list(CPET, GRIP, HWWT),table_names)
head(ioutliers)
qplot(ioutliers$score )
library(ggplot2)
qplot(ioutliers$score)
library(ggplot2)
qplot(ioutliers$score, geom="dotplot")
library(BulkQCprerelease)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
visit_exclusion <- list("ADU_FUP","PED_FUP","AUD_PO1","AUD_PO2","AUD_PAS","PED_PAS")
view_names <- c("v_grip", "v_iske", "v_cpet", "v_eetl", "v_dxah", "v_faeb", "v_faea",
"v_fara", "v_farb", "v_labr", "v_recg", "v_aeev", "v_hwwt", "v_retl",
"v_rmat", "v_dxag", "v_psca", "v_farc", "v_llco", "v_bphr", "v_acre",
"v_acee", "v_dxas")
views <- lapply(view_names, function(i) {
v <- dbReadTable(con0, i)
v <- v |>
filter(siteID%%10 == 2) |>
filter(!visitcode %in% visit_exclusion)
return(v)
})
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))
load("~/Documents/GitHub/BulkQCprerelease/R/motrpac_variable_blacklist.RData")
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))
multivar_outliers <- individual_multivariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
tables[1:5]
g(tables[1:5])
g <- dplyr::glimpse
g(tables[1:5])
names
knitr::opts_chunk$set(echo = TRUE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
dbReadTable(con0, "v_DXAG")
dbReadTable(con0, "v_DXAS")
view_names <- c("v_DXAS","v_DXAG")
visit_exclusion <- list("ADU_FUP","PED_FUP","AUD_PO1","AUD_PO2","AUD_PAS","PED_PAS")
view_names <- c("v_DXAS","v_DXAG")
views <- lapply(view_names, function(i) {
v <- dbReadTable(con0, i)
v <- v |>
filter(siteID%%10 == 2) |>
filter(!visitcode %in% visit_exclusion)
return(v)
})
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))
views
views[1]
multivar_outliers <- individual_multivariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
individual_multivariate_outliers(crfs=tables[1],crf_names=names[1])
g(mutlivar_outliers)
multivar_outliers <- individual_multivariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
g(mutlivar_outliers)
g(multivar_outliers)
qplot(multivar_outliers)
qplot(multivar_outliers$score)
indiv_plot <- function(row) {
view_num <- match(row$crf, view_names)
vdf <- views[[view_num]]
var_name <- row$var
qplot(vdf[[var_name]])
}
indiv_plot(indiv_uni_outliers[1,])
indiv_plot <- function(row) {
view_num <- match(row$crf, view_names)
vdf <- views[[view_num]]
var_name <- row$var
qplot(vdf[[var_name]])
}
indiv_plot(multivar_outliers[1,])
iqo <- individual_univariate_outliers(crfs, crf_names)
iqo <- individual_univariate_outliers(tables, names)
iqo
iqo <- individual_univariate_outliers(crfs = tables, crf_names = names, n_outliers = 50)
iqo
view(v_DXAG)
view(views[1])
view(views[2])
knitr::opts_chunk$set(echo = TRUE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
qplot(multivar_outliers$score)
qplot(multivar_outliers$score)
head(multivar_outliers,10)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpacDSMB",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
head(univar_outliers)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac_DSMB",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
library(BulkQCprerelease)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
# manually load in rstudio, not working with current packages for some reason TODO fix
load("motrpac_variable_blacklist.RData")
load("~/Documents/GitHub/BulkQCprerelease/R/motrpac_variable_blacklist.RData")
motrpac_variable_blacklist
length(motrpac_variable_blacklist)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
visit_exclusion <- list("ADU_FUP","PED_FUP","AUD_PO1","AUD_PO2","AUD_PAS","PED_PAS")
view_names <- c("v_grip", "v_iske", "v_cpet", "v_eetl", "v_dxah", "v_faeb", "v_faea",
"v_fara", "v_farb", "v_labr", "v_recg", "v_aeev", "v_hwwt", "v_retl",
"v_rmat", "v_dxag", "v_psca", "v_farc", "v_llco", "v_bphr", "v_acre",
"v_acee", "v_dxas")
views <- lapply(view_names, function(i) {
v <- dbReadTable(con0, i)
v <- v |>
filter(siteID%%10 == 2) |>
filter(!visitcode %in% visit_exclusion)
return(v)
})
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))

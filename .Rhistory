g <- dplyr::glimpse
g(tables[1:5])
names
knitr::opts_chunk$set(echo = TRUE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
dbReadTable(con0, "v_DXAG")
dbReadTable(con0, "v_DXAS")
view_names <- c("v_DXAS","v_DXAG")
visit_exclusion <- list("ADU_FUP","PED_FUP","AUD_PO1","AUD_PO2","AUD_PAS","PED_PAS")
view_names <- c("v_DXAS","v_DXAG")
views <- lapply(view_names, function(i) {
v <- dbReadTable(con0, i)
v <- v |>
filter(siteID%%10 == 2) |>
filter(!visitcode %in% visit_exclusion)
return(v)
})
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))
views
views[1]
multivar_outliers <- individual_multivariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
individual_multivariate_outliers(crfs=tables[1],crf_names=names[1])
g(mutlivar_outliers)
multivar_outliers <- individual_multivariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
g(mutlivar_outliers)
g(multivar_outliers)
qplot(multivar_outliers)
qplot(multivar_outliers$score)
indiv_plot <- function(row) {
view_num <- match(row$crf, view_names)
vdf <- views[[view_num]]
var_name <- row$var
qplot(vdf[[var_name]])
}
indiv_plot(indiv_uni_outliers[1,])
indiv_plot <- function(row) {
view_num <- match(row$crf, view_names)
vdf <- views[[view_num]]
var_name <- row$var
qplot(vdf[[var_name]])
}
indiv_plot(multivar_outliers[1,])
iqo <- individual_univariate_outliers(crfs, crf_names)
iqo <- individual_univariate_outliers(tables, names)
iqo
iqo <- individual_univariate_outliers(crfs = tables, crf_names = names, n_outliers = 50)
iqo
view(v_DXAG)
view(views[1])
view(views[2])
knitr::opts_chunk$set(echo = TRUE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
qplot(multivar_outliers$score)
qplot(multivar_outliers$score)
head(multivar_outliers,10)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpacDSMB",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
univar_outliers <- BulkQCprerelease::individual_univariate_outliers(crfs = tables,
crf_names = names,
n_outliers = 50)
head(univar_outliers)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac_DSMB",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
library(BulkQCprerelease)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
# manually load in rstudio, not working with current packages for some reason TODO fix
load("motrpac_variable_blacklist.RData")
load("~/Documents/GitHub/BulkQCprerelease/R/motrpac_variable_blacklist.RData")
motrpac_variable_blacklist
length(motrpac_variable_blacklist)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(BulkQCprerelease)
library(odbc)
library(DBI)
library(dplyr)
# library(plyr)
library(reshape)
library(sqldf)
library(dplyr)
library(isotree)
library(plyr)
library(stddiff)
library(stringr)
library(tidyverse)
con0 <- dbConnect(odbc(), Driver = "ODBC Driver 17 for SQL Server",
Server = "sqlprod.phs.wakehealth.edu", Database = "motrpac",
UID = "motrpacSas", PWD = "46Fw9A1B99CgE", Encoding = "UTF-16",
Port = 1433)
visit_exclusion <- list("ADU_FUP","PED_FUP","AUD_PO1","AUD_PO2","AUD_PAS","PED_PAS")
view_names <- c("v_grip", "v_iske", "v_cpet", "v_eetl", "v_dxah", "v_faeb", "v_faea",
"v_fara", "v_farb", "v_labr", "v_recg", "v_aeev", "v_hwwt", "v_retl",
"v_rmat", "v_dxag", "v_psca", "v_farc", "v_llco", "v_bphr", "v_acre",
"v_acee", "v_dxas")
views <- lapply(view_names, function(i) {
v <- dbReadTable(con0, i)
v <- v |>
filter(siteID%%10 == 2) |>
filter(!visitcode %in% visit_exclusion)
return(v)
})
tables <- views
names <- view_names
# manually load in rstudio, not working with current packages for some reason TODO fix
# load("motrpac_variable_blacklist.RData")
print(length(motrpac_variable_blacklist))
library(BulkQC)
CPET
load("~/Documents/GitHub/BulkQC/data/CPET.rda")
library(BulkQC)
table_names <- c("CPET","GRIP","HWWT")
kable(head(CPET))
library(isotree)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,  # turn on to debug
message = FALSE
)
library(BulkQC)
table_names <- c("CPET","GRIP","HWWT")
kable(head(CPET))
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names)
CPET
individual_univariate_outliers(list(CPET),c("cpet_view"))
individual_univariate_outliers(list(GRIP),c("cpet_view"))
GRIP
CPET
HWWT
# IQR-based outlier detection
#' Individual-level Outliers
#'
#' Finds individual-level outliers using interquartile ranges
#'
#' @param crfs list of dataframes that contain case report form data
#' @param crf_names list of strings representing the names of the crfs
#' @param n_outliers number of outliers to return; if n_outliers == -1, all data is returned
#'
#' @return List of dataframes
#'
#' @examples
#' crfs <- list(GRIP, CPET)
#' crf_names <- c("grip", "cpet")
#' print(individual_outliers(crfs, crf_names))
#'
#' @export
individual_univariate_outliers <- function(crfs, crf_names, n_outliers=-1) {
if (length(crfs) != length(crf_names)) {
stop("crfs and crf_names are not of equal length")
}
res <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(res) <- c("pid", "crf", "score")
not_all_na <- function(x) any(!is.na(x))
outliers <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(outliers) <- c("variable","crf","site","value")
for(crf_id in 1:length(crfs)) {
crf <- crfs[[crf_id]]
sites <- crf$site
crf_name <- crf_names[[crf_id]]
crf <- crf |>
select(where(not_all_na)) |>
select(where(is.numeric))
crf$siteID <- sites
if(nrow(crf) < 10) next
if(ncol(crf) < 1) next
for(cid in 1:ncol(crf)) {
col <- crf[[cid]]
variable <- colnames(crf)[[cid]]
fstQ <- summary(col, na.rm=TRUE)[[2]]
thdQ <- summary(col,na.rm=TRUE)[[5]]
iqr <- IQR(col,na.rm=TRUE)
high_cutoff <- 1.5*iqr + thdQ
low_cutoff  <- fstQ - 1.5*iqr
for(xid in 1:nrow(crf)) {
tryCatch(expr = {
val <- col[[xid]]
site <- crf[xid, ]$site
if (!is.na(val) && (val > high_cutoff || low_cutoff > val)) {
outliers[nrow(outliers)+1,] <- c(variable, crf_name, site, val)
}
},
error=function(e) {
print(e)
return(e)
}
)
}
return(dplyr::arrange(res, crf, desc(score)))
}
individual_univariate_outliers(list(GRIP),c("cpet_view"))
library(BulkQC)
individual_univariate_outliers(list(GRIP),c("cpet_view"))
warnings()
nrow(GRIP)
library(BulkQC)
individual_univariate_outliers(list(GRIP),c("cpet_view"))
library(BulkQC)
individual_univariate_outliers(list(GRIP),c("cpet_view"))
load("~/Documents/GitHub/BulkQC/data/CPET.rda")
View(CPET)
CPET[11]
CPET[11,"vo2"]
CPET[11,"vo2"] = 150
View(CPET)
?save
getwd()
save(file="CPET.RData", CPET)
load("~/Documents/GitHub/BulkQC/data/CPET.rda")
library(BulkQC)
?BulkQC::individual_multivariate_outlier
?BulkQC
??BulkQC
i_m_outliers <- individual_multivariate_outliers(
list(CPET, GRIP, HWWT),
table_names,
id_var = "pid",
site_var = "site")
library(BulkQC)
library(isotree)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,  # turn on to debug
message = FALSE
)
library(BulkQC)
table_names <- c("CPET","GRIP","HWWT")
kable(head(CPET))
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names, "pid", "site")
CPET
cpet2 <- CPET
cpet2
rename(cpet2, site = site.name)
rename(cpet2, site.name = site)
library(BulkQC)
libarry(BulkQC)
library(BulkQC)
CPET
View(CPET)
iuo <- BulkQC::individual_univariate_outliers()
iuo <- BulkQC::individual_univariate_outliers
iuo(list("CPET"), c("cpet_view"))
library(BulkQC)
iuo(list("CPET"), c("cpet_view"))
CPET
rename(CPET, pid = "pid")
library(BulkQC)
iuo <- BulkQC::individual_univariate_outliers()
iuo <- BulkQC::individual_univariate_outliers
iuo(list("CPET"), c("cpet_view"))
crfs
crf
iuo(list(CPET), c("cpet_view"))
library(BulkQC)
iou <- BulkQC::individual_univariate_outliers
iuo(list(CPET), c("cpet_view"))
library(BulkQC)
individual_univariate_outliers(list(CPET), c("cpet"))
library(BulkQC)
qplot
library(ggplot2)
qplot(CPET$vo2)
individual_univariate_outliers(list(CPET), c("cpet"))
crf
dplyr::glimpse(crf)
summary(crf)
variable
individual_univariate_outliers(list(CPET), c("cpet"))
val
is.na(val)
val > high_cutoff
low_cutoff > val
T || F
outliers
library(BulkQC)
library(isotree)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,  # turn on to debug
message = FALSE
)
library(BulkQC)
table_names <- c("CPET","GRIP","HWWT")
kable(head(CPET))
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names, "pid", "site")
HWWT
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names, "pid", "site")
kable(head(i_u_outliers))
tibble(CPET)
summary(CPET)
summary(HWWT)
library(BulkQC)
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names, "pid", "site")
GRIP
kable(head(i_u_outliers))
GRIP
HWWT
grip2 <- GRIP
grip2$site <- as.numeric(grip2$site)
grip2
GRIP <- grip2
GRIP
i_u_outliers <- individual_univariate_outliers(list(CPET, GRIP, HWWT), table_names, "pid", "site")
kable(head(i_u_outliers))
GRIP
save(file="GRIP.rda2", GRIP)
library(BulkQC)
CPET[21,]
CPET[22,]
CPET[23,]
CPET$vo2
summary(CPET)
View(CPET)
CPET[11,v02]
CPET[11,"vo2"]
CPET[11,"vo2"] <- NA
View(HWWT)
HWWT[8,"height"]
HWWT[8,"height"] <- NA
HWWT[8,"weight"] <- NA
mulitiste_outliers <- multisiteQC(list(CPET, GRIP, HWWT), table_names)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(CPET,GRIP,HWWT),table_names)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(CPET,GRIP,HWWT),table_names)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(CPET,GRIP,HWWT),table_names)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(CPET,GRIP,HWWT),table_names)
multisiteQC2(list(CPET,GRIP,HWWT),table_names, verbose=T)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(CPET,GRIP,HWWT),table_names, verbose=T)
library(BulkQC)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
library(BulkQC)
multisiteQC(list(HWWT),c("height_weight"))
multisiteQC2(list(HWWT),c("height_weight"))
all_results
multisiteQC2(list(HWWT),c("height_weight"))
tablename
numeric_col_names
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"))
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"))
multisiteQC2(list(HWWT),c("height_weight"),verbose=T)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"),verbose=T)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"),verbose=T)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"),verbose=T)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(list(HWWT),c("height_weight"),verbose=T)
multisiteQC2(list(HWWT),c("height_weight"),verbose=F)
library(BulkQC)
HWWT
hwwt2 <- HWWT
hwwt2$weight[hwwt$site == 1] <- hwwt2$weight[hwwt$site == 1] * 1.2
hwwt2$weight[hwwt$site == 1] <- hwwt2$weight[hwwt2$site == 1] * 1.2
hwwt2$weight[hwwt2$site == 1] <- hwwt2$weight[hwwt2$site == 1] * 1.2
hwwt
hwwt2
round(1.1, 0)
hwwt2$weight <- round(hwwt2$weight,0)
hwwt2
HWWT <- hwwt2
HWWT
save(file = HWWT.rda2, HWWT)
save(file = "HWWT.rda2", HWWT)
library(BulkQC)
HWWT
HWWT$weight[HWWT$site == 1] <- HWWT$weight[HWWT$site == 1] * 1.5
HWWT
library(BulkQC)
HWWT
library(BulkQC)
HWWT
HWWT$weight[HWWT$site == 1] <- round(HWWT$weight[HWWT$site == 1] * 1.5,0)
HWWT
save(file="HWWT.rda", HWWT)
library(BulkQC)
HWWT
??drop_na
library(dplyr)
library(tidyverse)
library(stddiff)
drop_na
library(isotree)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,  # turn on to debug
message = FALSE
)
library(BulkQC)
table_names <- c("CPET","GRIP","HWWT")
kable(head(CPET))
mulitisite_outliers <- multisiteQC(tables = list(CPET, GRIP, HWWT),
table_names = table_names,
IDvar = "pid",
grouping_var = "site",
min_p = 0.001,
min_std_diff = 0.3,
adjust = F)
kable(head(mulitisite_outliers))
CPET
drop_na(CPET)
library(BulkQC)
??drop_na
library(BulkQC)
HWWT$weight[HWWT$site == 1] <- round(HWWT$weight[HWWT$site == 1] * 10,0)
HWWT
HWWT2 <- HWWT
HWWT2
mulitisite_outliers <- multisiteQC(tables = list(CPET, GRIP, HWWT2),
table_names = table_names,
IDvar = "pid",
grouping_var = "site",
min_p = 0.001,
min_std_diff = 0.3,
verbose=T,
adjust = F)
kable(head(mulitisite_outliers))
View(HWWT)
library(BulkQC)
source("~/Documents/GitHub/BulkQC/R/multisite.R")
multisiteQC2(tables = list(CPET, GRIP, HWWT),
table_names = table_names,
IDvar = "pid",
grouping_var = "site",
min_p = 0.001,
min_std_diff = 0.3,
adjust = F)
View(df)
library(BulkQC)
HWWT
View(HWWT)
library(BulkQC)
??IQR
library(BulkQC)
stats::IQR
